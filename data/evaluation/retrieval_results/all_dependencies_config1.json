[
  {
    "dependency_category": "value-equality",
    "index": 0,
    "link_str": "apollo::::apollo-audit/apollo-audit-api/pom.xml::::project::::modelVersion::::modelVersion:4.0.0 <-> apollo::::apollo-biz/pom.xml::::project::::modelVersion::::modelVersion:4.0.0",
    "project": "apollo",
    "option_name": "project.modelVersion",
    "option_value": "modelVersion:4.0.0",
    "option_type": "ConfigType.VERSION_NUMBER",
    "option_file": "apollo-audit/apollo-audit-api/pom.xml",
    "option_technology": "maven",
    "dependent_option_name": "project.modelVersion",
    "dependent_option_value": "modelVersion:4.0.0",
    "dependent_option_type": "ConfigType.VERSION_NUMBER",
    "dependent_option_file": "apollo-biz/pom.xml",
    "dependent_option_technology": "maven",
    "config_type": "correct",
    "rating": "TRUE",
    "final_rating": true,
    "final_category": "Version Numbers",
    "sub_category": "POM Version",
    "explanation": "modelVersion has to be consistent across all modules and is generally set to 4.0.0 since it is the only supported version",
    "context": [
      {
        "text": "For instance, if\nyou are using a BOM (Bill of Materials) module, the `modelVersion` allows\nMaven to understand how to handle the versions of the dependencies specified\nwithin that BOM. This simplifies the process of managing versions across\nmultiple modules, as you do not need to specify the version for every\ndependency individually.\n\n#### Example of a pom.xml\n\nHere is a basic example of a `pom.xml` file that includes the `modelVersion`:\n\n    \n    \n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n             xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n        <modelVersion>4.0.0</modelVersion>\n        <groupId>org.example</groupId>\n        <artifactId>demo</artifactId>\n        <version>1.",
        "score": "4.398603916168213",
        "source": "web",
        "id": "d6868b65-91c6-4691-a8ab-779aa626bb89"
      },
      {
        "text": "Child pom.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\">\n\n<modelVersion>4.0.0</modelVersion>\n\n<parent>\n\n<groupId>maven.test1</groupId>\n\n<artifactId>maven-test1-parent</artifactId>\n\n<version>[1.0,99.0)</version>\n\n</parent>\n\n<artifactId>maven-test1-child1</artifactId>\n\n<name>${project.artifactId}</name>\n\n</project>\n\n  \n  \nThe key line here is _line 8_. Here I specify the parent _pom.xml_ version\n**_range_** as _[1.0,99.0)_. This means it will match whatever the parent is\nbetween versions _1.0_ and _99.0_. This is possible to do since [version\n3.2.2](https://maven.apache.org/docs/3.2.2/release-notes.html \"Go to\nhttp://maven.apache.org/docs/3.2.2/release-notes.html\").",
        "score": "4.153621673583984",
        "source": "web",
        "id": "2f996afc-c090-4f2a-8d03-ea5227827391"
      },
      {
        "text": "## Key Elements of a POM File\n\n  * **modelVersion** : Indicates the version of the POM model. For example, `4.0.0` is the current version used in most projects.\n  * **groupId** : Defines the unique identifier for the project group. This is typically structured as a reverse domain name.\n  * **artifactId** : Specifies the unique identifier for the project itself.\n  * **version** : Represents the current version of the project, which can include qualifiers like `SNAPSHOT` for ongoing development.\n\n### Example POM Structure\n\nHere\u2019s a basic example of a POM file:\n\n    \n    \n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n             xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n        <modelVersion>4.0.0</modelVersion>\n        <groupId>org.",
        "score": "3.4560132026672363",
        "source": "web",
        "id": "656e2002-a1b6-41cf-a17e-e25c0fbc70df"
      },
      {
        "text": "This is what the parent/super _pom.xml_ would look like...  \n\n Super pom.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\">\n\n<modelVersion>4.0.0</modelVersion>\n\n<groupId>maven.test1</groupId>\n\n<artifactId>maven-test1-parent</artifactId>\n\n<version>${revision}</version>\n\n<properties>\n\n<revision>42.0</revision>\n\n</properties>\n\n<name>${project.artifactId}</name>\n\n<description>Main POM file for ${project.artifactId}</description>\n\n<packaging>pom</packaging>\n\n<modules>\n\n<module>Child1</module>\n\n</modules>\n\n</project>\n\n  \n  \nThe key lines above are _line 7_ and _line 10_. On _line 7_ , I set the parent\n_pom.xml_ version via the _${revision}_ property.",
        "score": "3.230741024017334",
        "source": "web",
        "id": "1a9fedb2-2b36-407e-95a9-570da5f39a9e"
      },
      {
        "text": "This is essential for maintaining the integrity of the build process.\n  * **Features** : Different model versions may support different features or configurations. By adhering to `4.0.0`, you ensure access to the latest features and improvements in Maven.\n\n## Example of a Complete POM\n\nHere\u2019s a complete example of a `pom.xml` file that includes the\n`modelVersion`:\n\n    \n    \n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n             xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n        <modelVersion>4.0.0</modelVersion>\n        <groupId>org.example</groupId>\n        <artifactId>demo</artifactId>\n        <version>1.0-SNAPSHOT</version>\n        <properties>\n            <arrow.version>9.0.0</arrow.",
        "score": "2.2803406715393066",
        "source": "web",
        "id": "c08526bc-83ba-424e-a52b-df320426d33a"
      }
    ]
  },
  {
    "dependency_category": "value-equality",
    "index": 1,
    "link_str": "apollo::::apollo-adminservice/src/test/resources/application.properties::::spring.cloud.zookeeper.enabled::::false <-> apollo::::pom.xml::::project::::build::::pluginManagement::::plugins::::plugin_findbugs-maven-plugin::::configuration::::failOnError::::false",
    "project": "apollo",
    "option_name": "spring.cloud.zookeeper.enabled",
    "option_value": "FALSE",
    "option_type": "ConfigType.BOOLEAN",
    "option_file": "apollo-adminservice/src/test/resources/application.properties",
    "option_technology": "spring",
    "dependent_option_name": "project.build.pluginManagement.plugins.plugin_findbugs-maven-plugin.configuration.failOnError",
    "dependent_option_value": "FALSE",
    "dependent_option_type": "ConfigType.BOOLEAN",
    "dependent_option_file": "pom.xml",
    "dependent_option_technology": "maven",
    "config_type": "correct",
    "rating": "FALSE",
    "final_rating": false,
    "final_category": "Boolean",
    "sub_category": "Boolean",
    "explanation": "different options that are not related",
    "context": [
      {
        "text": "It lets you provide custom behavior when your application boots, to\nreact according to the state of your dependencies.\n\nThe default implementation of the abstract\n`org.springframework.cloud.zookeeper.discovery.watcher.presence.DependencyPresenceOnStartupVerifier`\nclass is the\n`org.springframework.cloud.zookeeper.discovery.watcher.presence.DefaultDependencyPresenceOnStartupVerifier`,\nwhich works in the following way.\n\n  1. If the dependency is marked us `required` and is not in Zookeeper, when your application boots, it throws an exception and shuts down.\n\n  2. If the dependency is not `required`, the `org.springframework.cloud.zookeeper.discovery.watcher.presence.LogMissingDependencyChecker` logs that the dependency is missing at the `WARN` level.\n\nBecause the `DefaultDependencyPresenceOnStartupVerifier` is registered only\nwhen there is no bean of type `DependencyPresenceOnStartupVerifier`, this\nfunctionality can be overridden.\n\n## 7\\. Distributed Configuration with Zookeeper\n\nZookeeper provides a [hierarchical\nnamespace](https://zookeeper.apache.org/doc/current/zookeeperOver.html#sc_dataModelNameSpace)\nthat lets clients store arbitrary data, such as configuration data.",
        "score": "1.2163918018341064",
        "source": "web",
        "id": "01f266a1-8e03-402a-8652-877c3e31baf1"
      },
      {
        "text": "Without this setting, those two parameters do not work.\n\n[Spring Cloud Zookeeper and Service Registry](service-registry.html) [Spring\nCloud Zookeeper Dependency Watcher](dependency-watcher.html)\n\n  * [Spring Cloud Zookeeper](index.html)\n    * [ 4.3.0-SNAPSHOT ](4.3-SNAPSHOT/index.html)\n    * [ 4.3.0-M1 ](4.3/index.html)\n    * [ 4.2.0current ](index.html)\n    * [ 4.1.4-SNAPSHOT ](4.1-SNAPSHOT/index.html)\n    * [ 4.1.3 ](4.1/index.html)\n\n  * Related Spring Documentation \n    * [ Spring Boot ](https://docs.spring.io/spring-boot/)\n    * [ Spring Framework ](https://docs.spring.io/spring-framework/reference/)\n    * __Spring Cloud\n      * [ Spring Cloud Build ](https://docs.spring.io/spring-cloud-build/reference/)\n      * [ Spring Cloud Bus ](https://docs.spring.",
        "score": "0.04489158093929291",
        "source": "web",
        "id": "d77aa49a-1877-4406-aac2-08c67b1ca534"
      },
      {
        "text": "tools.checkstyle.checks.imports.AvoidStaticImportCheck\">-->\n        <!--            <property name=\"excludes\"-->\n        <!--                      value=\"io.restassured.RestAssured.*, org.assertj.core.api.Assertions.*, org.junit.jupiter.api.Assertions.*, org.junit.jupiter.api.Assumptions.*, org.junit.Assert.*, org.junit.Assume.*, org.junit.internal.matchers.ThrowableMessageMatcher.*, org.junit.jupiter.api.Assertions.*, org.hamcrest.CoreMatchers.*, org.hamcrest.Matchers.*, org.springframework.boot.configurationprocessor.ConfigurationMetadataMatchers.*, org.springframework.boot.configurationprocessor.TestCompiler.*, org.springframework.boot.test.autoconfigure.AutoConfigurationImportedCondition.*, org.mockito.Mockito.*, org.mockito.BDDMockito.*, org.mockito.ArgumentMatchers.*, org.mockito.Matchers.*, org.springframework.restdocs.headers.HeaderDocumentation.*, org.springframework.restdocs.hypermedia.HypermediaDocumentation.*, org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*, org.springframework.restdocs.mockmvc.RestDocumentationRequestBuilders.",
        "score": "-2.6098246574401855",
        "source": "github",
        "id": "c7bfc3a5-634a-46a8-8a39-a3ada796051a"
      },
      {
        "text": "# Spring Cloud Zookeeper\n\nTable of Contents\n\n  * 1\\. Install Zookeeper\n  * 2\\. Service Discovery with Zookeeper\n    * 2.1. Activating\n    * 2.2. Registering with Zookeeper\n    * 2.3. Using the DiscoveryClient\n  * 3\\. Using Spring Cloud Zookeeper with Spring Cloud Netflix Components\n    * 3.1. Spring Cloud LoadBalancer with Zookeeper\n  * 4\\. Spring Cloud Zookeeper and Service Registry\n    * 4.1. Instance Status\n  * 5\\. Zookeeper Dependencies\n    * 5.1. Using the Zookeeper Dependencies\n    * 5.2. Activating Zookeeper Dependencies\n    * 5.3. Setting up Zookeeper Dependencies\n    * 5.4. Configuring Spring Cloud Zookeeper Dependencies\n  * 6\\. Spring Cloud Zookeeper Dependency Watcher\n    * 6.1. Activating\n    * 6.2. Registering a Listener\n    * 6.3. Using the Presence Checker\n  * 7\\.",
        "score": "-3.031686782836914",
        "source": "web",
        "id": "3fb6c6c9-6d73-435c-961c-e96db384e219"
      },
      {
        "text": "This version introduces a structured\napproach to defining project dependencies, ensuring that your builds are\nconsistent and reliable.\n\n## Project Structure\n\nA typical Maven project structure includes a `pom.xml` file that defines the\nproject\u2019s configuration. Below is an example of a basic `pom.xml`:\n\n    \n    \n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n             xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n        <modelVersion>4.0.0</modelVersion>\n        <groupId>org.example</groupId>\n        <artifactId>demo</artifactId>\n        <version>1.0-SNAPSHOT</version>\n        <properties>\n            <arrow.version>9.0.0</arrow.version>\n        </properties>\n        <dependencies>\n            <dependency>\n                <groupId>org.apache.",
        "score": "-4.415839195251465",
        "source": "web",
        "id": "bafdd5d7-08d1-446c-b25b-6b6f657cba14"
      }
    ]
  },
  {
    "dependency_category": "value-equality",
    "index": 2,
    "link_str": "apollo::::pom.xml::::project::::build::::pluginManagement::::plugins::::plugin_spring-boot-maven-plugin::::configuration::::attach::::false <-> apollo::::pom.xml::::project::::repositories::::repository_sonatype-nexus-snapshots::::releases::::enabled::::false",
    "project": "apollo",
    "option_name": "project.build.pluginManagement.plugins.plugin_spring-boot-maven-plugin.configuration.attach",
    "option_value": "FALSE",
    "option_type": "ConfigType.BOOLEAN",
    "option_file": "pom.xml",
    "option_technology": "maven",
    "dependent_option_name": "project.repositories.repository_sonatype-nexus-snapshots.releases.enabled",
    "dependent_option_value": "FALSE",
    "dependent_option_type": "ConfigType.BOOLEAN",
    "dependent_option_file": "pom.xml",
    "dependent_option_technology": "maven",
    "config_type": "correct",
    "rating": "FALSE",
    "final_rating": false,
    "final_category": "Boolean",
    "sub_category": "Boolean",
    "explanation": "different options that are not related",
    "context": [
      {
        "text": "html)\n        * [Version Properties](./appendix/dependency-versions/properties.html)\n\nSearch\n\n[ Edit this Page ](https://github.com/spring-projects/spring-\nboot/blob/v3.4.2/spring-boot-project/spring-boot-tools/spring-boot-maven-\nplugin/src/docs/antora/modules/maven-plugin/pages/using.adoc) [ GitHub Project\n](https://github.com/spring-projects/spring-boot \"GitHub\") [ Stack Overflow\n](https://stackoverflow.com/tags/spring-boot)\n\n  * [Spring Boot](./index.html)\n  * [Build Tool Plugins](./build-tool-plugin/index.html)\n  * [Maven Plugin](index.html)\n  * [Using the Plugin](using.html)\n\n# Using the Plugin\n\nMaven users can inherit from the `spring-boot-starter-parent` project to\nobtain sensible defaults. The parent project provides the following features:\n\n  * Java 17 as the default compiler level.\n\n  * UTF-8 source encoding.\n\n  * Compilation with `-parameters`.\n\n  * A dependency management section, inherited from the `spring-boot-dependencies` POM, that manages the versions of common dependencies.",
        "score": "3.2411653995513916",
        "source": "web",
        "id": "56123056-5bd2-413c-83b1-985471521f11"
      },
      {
        "text": "---|---  \n  \n__ |  The `spring-boot-starter-parent` sets the `maven.compiler.release` property, which restricts the `--add-exports`, `--add-reads`, and `--patch-module` options [if they modify system modules](https://openjdk.org/jeps/247). In case you need to use those options, unset `maven.compiler.release`:\n    \n    \n    <maven.compiler.release></maven.compiler.release>\n\nand then configure the source and the target options instead:\n\n    \n    \n    <maven.compiler.source>${java.version}</maven.compiler.source>\n    <maven.compiler.target>${java.version}</maven.compiler.target>  \n  \n---|---  \n  \n## Inheriting the Starter Parent POM\n\nTo configure your project to inherit from the `spring-boot-starter-parent`,\nset the `parent` as follows:\n\n    \n    \n    <!-- Inherit defaults from Spring Boot -->\n    <parent>\n    \t<groupId>org.springframework.boot</groupId>\n    \t<artifactId>spring-boot-starter-parent</artifactId>\n    \t<version>3.4.2</version>\n    </parent>\n\n__ |  You should need to specify only the Spring Boot version number on this dependency.",
        "score": "2.320021390914917",
        "source": "web",
        "id": "3a542a64-609e-413f-adbe-cba331d19db6"
      },
      {
        "text": "5.0-M1 ](./3.5/maven-plugin/using.html)\n\nSnapshot\n\n    * [ 3.5.0-SNAPSHOT ](./3.5-SNAPSHOT/maven-plugin/using.html)\n    * [ 3.4.3-SNAPSHOT ](./3.4-SNAPSHOT/maven-plugin/using.html)\n    * [ 3.3.9-SNAPSHOT ](./3.3-SNAPSHOT/maven-plugin/using.html)\n\n  * Related Spring Documentation \n    * [ Spring Boot ](https://docs.spring.io/spring-boot/)\n    * [ Spring Framework ](https://docs.spring.io/spring-framework/reference/)\n    * __Spring Cloud\n      * [ Spring Cloud Build ](https://docs.spring.io/spring-cloud-build/reference/)\n      * [ Spring Cloud Bus ](https://docs.spring.io/spring-cloud-bus/reference/)\n      * [ Spring Cloud Circuit Breaker ](https://docs.spring.io/spring-cloud-circuitbreaker/reference/)\n      * [ Spring Cloud Commons ](https://docs.spring.",
        "score": "1.0044554471969604",
        "source": "web",
        "id": "7d4ed625-e20c-4116-b28f-edd9c514ded7"
      },
      {
        "text": "/how-to/deployment/installing.html)\n      * [Docker Compose](./how-to/docker-compose.html)\n    * [Build Tool Plugins](./build-tool-plugin/index.html)\n      * [Maven Plugin](index.html)\n        * [Getting Started](getting-started.html)\n        * [Using the Plugin](using.html)\n        * [Goals](goals.html)\n        * [Packaging Executable Archives](packaging.html)\n        * [Packaging OCI Images](build-image.html)\n        * [Running your Application with Maven](run.html)\n        * [Ahead-of-Time Processing](aot.html)\n        * [Running Integration Tests](integration-tests.html)\n        * [Integrating with Actuator](build-info.html)\n        * [Help Information](help.html)\n      * [Gradle Plugin](./gradle-plugin/index.html)\n        * [Getting Started](./gradle-plugin/getting-started.html)\n        * [Managing Dependencies](./gradle-plugin/managing-dependencies.html)\n        * [Packaging Executable Archives](./gradle-plugin/packaging.",
        "score": "-2.6549911499023438",
        "source": "web",
        "id": "e91e0df8-5360-495d-9de5-a86e57ac2f9c"
      },
      {
        "text": "Child pom.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\">\n\n<modelVersion>4.0.0</modelVersion>\n\n<parent>\n\n<groupId>maven.test1</groupId>\n\n<artifactId>maven-test1-parent</artifactId>\n\n<version>[1.0,99.0)</version>\n\n</parent>\n\n<artifactId>maven-test1-child1</artifactId>\n\n<name>${project.artifactId}</name>\n\n</project>\n\n  \n  \nThe key line here is _line 8_. Here I specify the parent _pom.xml_ version\n**_range_** as _[1.0,99.0)_. This means it will match whatever the parent is\nbetween versions _1.0_ and _99.0_. This is possible to do since [version\n3.2.2](https://maven.apache.org/docs/3.2.2/release-notes.html \"Go to\nhttp://maven.apache.org/docs/3.2.2/release-notes.html\").",
        "score": "-3.7313127517700195",
        "source": "web",
        "id": "2f996afc-c090-4f2a-8d03-ea5227827391"
      }
    ]
  },
  {
    "dependency_category": "value-equality",
    "index": 3,
    "link_str": "apollo::::apollo-assembly/src/main/resources/application.yml::::spring.cloud.zookeeper.enabled::::False <-> apollo::::apollo-configservice/src/main/resources/application.yml::::eureka.client.fetch-registry::::False",
    "project": "apollo",
    "option_name": "spring.cloud.zookeeper.enabled",
    "option_value": "FALSE",
    "option_type": "ConfigType.BOOLEAN",
    "option_file": "apollo-assembly/src/main/resources/application.yml",
    "option_technology": "spring",
    "dependent_option_name": "eureka.client.fetch-registry",
    "dependent_option_value": "FALSE",
    "dependent_option_type": "ConfigType.BOOLEAN",
    "dependent_option_file": "apollo-configservice/src/main/resources/application.yml",
    "dependent_option_technology": "spring",
    "config_type": "correct",
    "rating": "FALSE",
    "final_rating": false,
    "final_category": "Boolean",
    "sub_category": "Boolean",
    "explanation": "different options that are not related",
    "context": [
      {
        "text": "Without this setting, those two parameters do not work.\n\n[Spring Cloud Zookeeper and Service Registry](service-registry.html) [Spring\nCloud Zookeeper Dependency Watcher](dependency-watcher.html)\n\n  * [Spring Cloud Zookeeper](index.html)\n    * [ 4.3.0-SNAPSHOT ](4.3-SNAPSHOT/index.html)\n    * [ 4.3.0-M1 ](4.3/index.html)\n    * [ 4.2.0current ](index.html)\n    * [ 4.1.4-SNAPSHOT ](4.1-SNAPSHOT/index.html)\n    * [ 4.1.3 ](4.1/index.html)\n\n  * Related Spring Documentation \n    * [ Spring Boot ](https://docs.spring.io/spring-boot/)\n    * [ Spring Framework ](https://docs.spring.io/spring-framework/reference/)\n    * __Spring Cloud\n      * [ Spring Cloud Build ](https://docs.spring.io/spring-cloud-build/reference/)\n      * [ Spring Cloud Bus ](https://docs.spring.",
        "score": "2.4701695442199707",
        "source": "web",
        "id": "d77aa49a-1877-4406-aac2-08c67b1ca534"
      },
      {
        "text": "spring.io/spring-cloud-stream/reference/)\n      * [ Spring Cloud Task ](https://docs.spring.io/spring-cloud-task/reference/)\n      * [ Spring Cloud Vault ](https://docs.spring.io/spring-cloud-vault/reference/)\n      * [ Spring Cloud Zookeeper ](https://docs.spring.io/spring-cloud-zookeeper/reference/)\n    * __Spring Data\n      * [ Spring Data Cassandra ](https://docs.spring.io/spring-data/cassandra/reference/)\n      * [ Spring Data Commons ](https://docs.spring.io/spring-data/commons/reference/)\n      * [ Spring Data Couchbase ](https://docs.spring.io/spring-data/couchbase/reference/)\n      * [ Spring Data Elasticsearch ](https://docs.spring.io/spring-data/elasticsearch/reference/)\n      * [ Spring Data JPA ](https://docs.spring.io/spring-data/jpa/reference/)\n      * [ Spring Data KeyValue ](https://docs.spring.io/spring-data/keyvalue/reference/)\n      * [ Spring Data LDAP ](https://docs.spring.io/spring-data/ldap/reference/)\n      * [ Spring Data MongoDB ](https://docs.spring.",
        "score": "-2.6392908096313477",
        "source": "web",
        "id": "4027c68e-b698-4fdf-b5b5-26f154e80051"
      },
      {
        "text": "__Discord notifications configuration options__\n| Property name                                | Description                                           | Default value                                                                                                    |\n| -------------------------------------------- | ----------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------- |\n| spring.boot.admin.notify.discord.enabled     | Enable Discord notifications                          | true                                                                                                             |\n| spring.boot.admin.notify.discord.webhook-url | The Discord webhook url to send the notifications to. |                                                                                                                  |\n| spring.boot.admin.notify.discord.username    | Optional username.                                    | _Default set in Discord_                                                                                         |\n| spring.boot.admin.notify.discord.avatar-url  | Optional URL to avatar.                               | _Default set in Discord_                                                                                         |\n| spring.boot.admin.notify.discord.tts         | If the message is a text to speech message.           | false                                                                                                            |\n| spring.boot.admin.notify.discord.message     | Text to send. SpEL-expressions are supported.",
        "score": "-2.6404452323913574",
        "source": "github",
        "id": "44034391-4a1a-4e19-9fb6-4283430b6367"
      },
      {
        "text": "__Discord notifications configuration options__\n| Property name                                | Description                                           | Default value                                                                                                    |\n| -------------------------------------------- | ----------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------- |\n| spring.boot.admin.notify.discord.enabled     | Enable Discord notifications                          | true                                                                                                             |\n| spring.boot.admin.notify.discord.webhook-url | The Discord webhook url to send the notifications to. |                                                                                                                  |\n| spring.boot.admin.notify.discord.username    | Optional username.                                    | _Default set in Discord_                                                                                         |\n| spring.boot.admin.notify.discord.avatar-url  | Optional URL to avatar.                               | _Default set in Discord_                                                                                         |\n| spring.boot.admin.notify.discord.tts         | If the message is a text to speech message.           | false                                                                                                            |\n| spring.boot.admin.notify.discord.message     | Text to send. SpEL-expressions are supported.",
        "score": "-3.0135154724121094",
        "source": "github",
        "id": "188468f3-4093-437f-ac4a-aea44d1cc385"
      },
      {
        "text": "| &#36;&#123;spring.boot.admin.discovery.converter.management-context-path&#125; |\n| health.path             | The path is appended to the service URL and will be used for the health-checking. Ignored by the EurekaServiceInstanceConverter. | &#36;&#123;spring.boot.admin.discovery.converter.health-endpoint&#125;         |\n| group                   | The group is used to group services in the UI by the group name instead of application name.                                     |                                                                                |\n\n__Discovery configuration options__\n| Property name                                                 | Description                                                                                                                                       | Default value |\n| ------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- | ------------- |\n| spring.boot.admin.discovery.enabled                           | Enables the DiscoveryClient-support for the admin server.                                                                                         | true          |\n| spring.boot.admin.discovery.converter.management-context-path | Will be appended to the service-url of the discovered service when the management-url is converted by the DefaultServiceInstanceConverter.",
        "score": "-3.2279293537139893",
        "source": "github",
        "id": "69a371ee-c280-452f-a501-1012cd320b48"
      }
    ]
  },
  {
    "dependency_category": "value-equality",
    "index": 4,
    "link_str": "apollo::::apollo-audit/apollo-audit-api/pom.xml::::project::::parent_apollo-audit::::groupId::::com.ctrip.framework.apollo <-> apollo::::apollo-configservice/pom.xml::::project::::parent_apollo::::groupId::::com.ctrip.framework.apollo",
    "project": "apollo",
    "option_name": "project.parent_apollo-audit.groupId",
    "option_value": "com.ctrip.framework.apollo",
    "option_type": "ConfigType.NAME",
    "option_file": "apollo-audit/apollo-audit-api/pom.xml",
    "option_technology": "maven",
    "dependent_option_name": "project.parent_apollo.groupId",
    "dependent_option_value": "com.ctrip.framework.apollo",
    "dependent_option_type": "ConfigType.NAME",
    "dependent_option_file": "apollo-configservice/pom.xml",
    "dependent_option_technology": "maven",
    "config_type": "correct",
    "rating": "Borderline",
    "final_rating": true,
    "final_category": "Multi-Maven-Modules",
    "sub_category": "Project Inheritance",
    "explanation": "different modules but inherit groupID from parent POM",
    "context": [
      {
        "text": "Child pom.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\">\n\n<modelVersion>4.0.0</modelVersion>\n\n<parent>\n\n<groupId>maven.test1</groupId>\n\n<artifactId>maven-test1-parent</artifactId>\n\n<version>[1.0,99.0)</version>\n\n</parent>\n\n<artifactId>maven-test1-child1</artifactId>\n\n<name>${project.artifactId}</name>\n\n</project>\n\n  \n  \nThe key line here is _line 8_. Here I specify the parent _pom.xml_ version\n**_range_** as _[1.0,99.0)_. This means it will match whatever the parent is\nbetween versions _1.0_ and _99.0_. This is possible to do since [version\n3.2.2](https://maven.apache.org/docs/3.2.2/release-notes.html \"Go to\nhttp://maven.apache.org/docs/3.2.2/release-notes.html\").",
        "score": "-1.036571979522705",
        "source": "web",
        "id": "2f996afc-c090-4f2a-8d03-ea5227827391"
      },
      {
        "text": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n     \r\n      <!--The identifier of the parent POM-->\r\n      <parent>\r\n        <groupId>com.howtodoinjava.demo</groupId>\r\n        <artifactId>MavenExamples</artifactId>\r\n        <version>0.0.1-SNAPSHOT</version>\r\n        <relativePath>../baseapp/pom.xml</relativePath>\r\n      </parent>\r\n     \r\n      <modelVersion>4.0.0</modelVersion>\r\n      <artifactId>MavenExamples</artifactId>\r\n      <name>MavenExamples Child POM</name>\r\n      <packaging>jar</packaging>\r\n     \r\n    </project>\n\n## 4\\. Demo\n\nLet's learn to create maven projects with the parent-child relationships.\n\n### 4.1. Create Parent Project\n\nProject creation wizard.\n\n!",
        "score": "-1.106938123703003",
        "source": "web",
        "id": "a24911e7-db02-4f37-abaa-63bc5e7b51c6"
      },
      {
        "text": "---|---  \n  \n__ |  The `spring-boot-starter-parent` sets the `maven.compiler.release` property, which restricts the `--add-exports`, `--add-reads`, and `--patch-module` options [if they modify system modules](https://openjdk.org/jeps/247). In case you need to use those options, unset `maven.compiler.release`:\n    \n    \n    <maven.compiler.release></maven.compiler.release>\n\nand then configure the source and the target options instead:\n\n    \n    \n    <maven.compiler.source>${java.version}</maven.compiler.source>\n    <maven.compiler.target>${java.version}</maven.compiler.target>  \n  \n---|---  \n  \n## Inheriting the Starter Parent POM\n\nTo configure your project to inherit from the `spring-boot-starter-parent`,\nset the `parent` as follows:\n\n    \n    \n    <!-- Inherit defaults from Spring Boot -->\n    <parent>\n    \t<groupId>org.springframework.boot</groupId>\n    \t<artifactId>spring-boot-starter-parent</artifactId>\n    \t<version>3.4.2</version>\n    </parent>\n\n__ |  You should need to specify only the Spring Boot version number on this dependency.",
        "score": "-2.074690818786621",
        "source": "web",
        "id": "3a542a64-609e-413f-adbe-cba331d19db6"
      },
      {
        "text": "w3.org/2001/XMLSchema-instance\"\r\n      xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd;\r\n      <modelVersion>4.0.0</modelVersion>\r\n     \r\n      <groupId>com.howtodoinjava.demo</groupId>\r\n      <artifactId>MavenExamples</artifactId>\r\n      <version>0.0.1-SNAPSHOT</version>\r\n      <packaging>pom</packaging>\r\n     \r\n      <name>MavenExamples Parent</name>\r\n      <url>http://maven.apache.org</url>\r\n     \r\n      <properties>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <junit.version>3.8.1</junit.version>\r\n        <spring.version>4.3.5.RELEASE</spring.version>\r\n      </properties>\r\n     \r\n      <dependencies>\r\n       \r\n        <dependency>\r\n          <groupId>junit</groupId>\r\n          <artifactId>junit</artifactId>\r\n          <version>${junit.",
        "score": "-3.3901524543762207",
        "source": "web",
        "id": "0624c07d-5c5e-4f32-8536-33ff0e5d5978"
      },
      {
        "text": "This version introduces a structured\napproach to defining project dependencies, ensuring that your builds are\nconsistent and reliable.\n\n## Project Structure\n\nA typical Maven project structure includes a `pom.xml` file that defines the\nproject\u2019s configuration. Below is an example of a basic `pom.xml`:\n\n    \n    \n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n             xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n        <modelVersion>4.0.0</modelVersion>\n        <groupId>org.example</groupId>\n        <artifactId>demo</artifactId>\n        <version>1.0-SNAPSHOT</version>\n        <properties>\n            <arrow.version>9.0.0</arrow.version>\n        </properties>\n        <dependencies>\n            <dependency>\n                <groupId>org.apache.",
        "score": "-3.429387331008911",
        "source": "web",
        "id": "bafdd5d7-08d1-446c-b25b-6b6f657cba14"
      }
    ]
  }
]